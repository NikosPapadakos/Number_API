{"version":3,"sources":["Display.js","App.js","reportWebVitals.js","index.js"],"names":["Display","props","className","id","info","App","useState","text","setText","setNumber","search","setSearch","getTrivia","a","fetch","response","json","console","log","Input","placeholder","inputProps","value","onChange","e","target","type","Button","variant","color","onClick","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAGe,SAASA,EAAQC,GAC5B,OACI,sBAAKC,UAAU,OAAf,UACI,8BACA,oBAAIA,UAAU,MAAd,kCAEA,qBAAKA,UAAU,kBAAkBC,GAAG,MAApC,SACA,oBAAID,UAAU,SAAd,SAAwBD,EAAMG,Y,oBC2C3BC,G,MA7CH,WAAO,IAAD,EAEQC,mBAAS,IAFjB,mBAETC,EAFS,KAEHC,EAFG,OAGYF,mBAAS,KAHrB,mBAGDG,GAHC,aAIYH,mBAAS,KAJrB,mBAITI,EAJS,KAIDC,EAJC,OAKUL,oBAAS,GALnB,mBAOVM,GAPU,UAOD,uCAAG,8BAAAC,EAAA,sEAEOC,MAAM,yBAAD,OAA0BJ,EAA1B,iBAFZ,cAEVK,EAFU,gBAGGA,EAASC,OAHZ,OAGVZ,EAHU,OAKhBI,EAAQJ,EAAKG,MACbU,QAAQC,IAAId,GANI,2CAAH,sDAsBf,OACE,sBAAKF,UAAU,MAAf,UACE,8BACE,yDAEF,sBAAKA,UAAU,YAAf,UACA,uBAAMA,UAAU,cAAhB,UACE,cAACiB,EAAA,EAAD,aAAOC,YAAY,cAAcC,WAAY,CAAE,aAAc,eAAiBnB,UAAU,aAAaoB,MAAOZ,EAAQa,SApBrG,SAACC,GACpBb,EAAUa,EAAEC,OAAOH,QAmB6HI,KAAK,QAAjJ,cAAoK,uBACpK,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAU3B,UAAU,aAAc4B,QAjBxD,SAACN,GACjBA,EAAEO,iBACFtB,EAAUC,GACVE,IACAD,EAAU,KAakFe,KAAK,SAA7F,uBAEA,cAAC,EAAD,CAASxB,UAAU,MAAME,KAAMG,YCnCxByB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f8c938f6.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Display.css';\r\n\r\nexport default function Display(props) {\r\n    return (\r\n        <div className='main'>\r\n            <div>\r\n            <h2 className='abs'>Did you know that:</h2>\r\n            </div>\r\n            <div className='gradient-border' id='box'>\r\n            <h2 className='trivia'>{props.info}</h2>  \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React,{useEffect, useState} from 'react';\nimport Display from './Display'\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport 'fontsource-roboto';\n\n\nconst App = () => {\n  \n  const [text, setText] = useState('')\n  const [number, setNumber] = useState('0')\n  const [search, setSearch] = useState('0')\n  const [found, setFound] = useState(false)\n  \n  const getTrivia = async () => {\n    \n    const response = await fetch(`http://numbersapi.com/${search}/trivia?json`);\n    const info = await response.json();\n    \n    setText(info.text)\n    console.log(info)\n  };\n \n  const updateSearch = (e) => {\n    setSearch(e.target.value)\n  }\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setNumber(search)\n    getTrivia();\n    setSearch('');\n  }\n  \n  \n  \n  return (\n    <div className=\"App\">\n      <div>\n        <h1>Numbers And Knowlegde</h1>\n      </div>\n      <div className='container'>\n      <form className='search-form'>\n        <Input placeholder=\"Placeholder\" inputProps={{ 'aria-label': 'description' }} className='search-bar' value={search} onChange={updateSearch} type='text' placeholder='Search a number...'/>\n        <Button variant=\"contained\" color=\"primary\" className='search-btn'  onClick={getSearch} type=\"submit\">Search</Button>\n      </form>\n        <Display className='dis' info={text}/>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}